<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>com.harry</groupId>
	<artifactId>universal-access-control</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
  
  	<properties> 
        <org.springframework.version>3.1.2.RELEASE</org.springframework.version>
        <org.struts.version>2.2.3.1</org.struts.version>  
    </properties>
    <dependencies>
    	<!-- JSTL -->
        <dependency> 
            <groupId>javax.servlet</groupId> 
            <artifactId>jstl</artifactId> 
            <version>1.2</version>
        </dependency> 
        <!-- Tomcat servlet --> 
        <dependency> 
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version> 
        </dependency>
        
        <!-- struts -->
        <dependency>
            <groupId>org.apache.struts</groupId>
            <artifactId>struts2-core</artifactId>
            <version>${org.struts.version}</version>
        </dependency>
        <dependency>
	      	<groupId>org.apache.struts</groupId>
	      	<artifactId>struts2-config-browser-plugin</artifactId>
	      	<version>${org.struts.version}</version>
    	</dependency>
    	<dependency>
      		<groupId>org.apache.struts</groupId>
      		<artifactId>struts2-convention-plugin</artifactId>
      		<version>${org.struts.version}</version>
    	</dependency>
    	<dependency>
	      	<groupId>org.apache.struts</groupId>
	      	<artifactId>struts2-spring-plugin</artifactId>
	      	<version>${org.struts.version}</version>
	    </dependency>
	    <dependency>
	      	<groupId>org.apache.struts.xwork</groupId>
	      	<artifactId>xwork-core</artifactId>
	      	<version>${org.struts.version}</version>
	    </dependency>
	    <dependency>
	     	 <groupId>org.apache.struts</groupId>
	     	 <artifactId>struts2-json-plugin</artifactId>
	     	 <version>${org.struts.version}</version>
	    </dependency>
	    <dependency>
	     	 <groupId>org.apache.struts</groupId>
	     	 <artifactId>struts2-tiles-plugin</artifactId>
	    	  <version>${org.struts.version}</version>
	    </dependency>
	    
	    <dependency>
	      <groupId>org.apache.tiles</groupId>
	      <artifactId>tiles-api</artifactId>
	      <version>2.2.2</version>
	    </dependency>
	    <dependency>
	      <groupId>org.apache.tiles</groupId>
	      <artifactId>tiles-core</artifactId>
	      <version>2.2.2</version>
	    </dependency>
	    <dependency>
	      <groupId>org.apache.tiles</groupId>
	      <artifactId>tiles-jsp</artifactId>
	      <version>2.2.2</version>
	    </dependency>
	    <dependency>
	      <groupId>org.apache.tiles</groupId>
	      <artifactId>tiles-servlet</artifactId>
	      <version>2.2.2</version>
	    </dependency>
	    <dependency>
	      <groupId>org.apache.tiles</groupId>
	      <artifactId>tiles-template</artifactId>
	      <version>2.2.2</version>
	    </dependency>
    
        <!-- Spring --> 
        <!-- Core utilities used by other modules. Define this if you use Spring 
            Utility APIs (org.springframework.core.*/org.springframework.util.*) --> 
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-core</artifactId>
            <version>${org.springframework.version}</version> 
        </dependency>
        <!-- Expression Language (depends on spring-core) Define this if you use 
            Spring Expression APIs (org.springframework.expression.*) --> 
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-expression</artifactId> 
            <version>${org.springframework.version}</version> 
        </dependency>
        <!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define 
            this if you use Spring Bean APIs (org.springframework.beans.*) --> 
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-beans</artifactId> 
            <version>${org.springframework.version}</version> 
        </dependency>
        <!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, 
            spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop.*) --> 
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-aop</artifactId> 
            <version>${org.springframework.version}</version> 
        </dependency>
        <!-- Application Context (depends on spring-core, spring-expression, spring-aop, 
            spring-beans) This is the central artifact for Spring's Dependency Injection 
            Container and is generally always defined --> 
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-context</artifactId> 
            <version>${org.springframework.version}</version> 
        </dependency>
        <!-- Various Application Context utilities, including EhCache, JavaMail, 
            Quartz, and Freemarker integration Define this if you need any of these integrations --> 
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-context-support</artifactId> 
            <version>${org.springframework.version}</version> 
        </dependency>
        <!-- Transaction Management Abstraction (depends on spring-core, spring-beans, 
            spring-aop, spring-context) Define this if you use Spring Transactions or 
            DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) --> 
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-tx</artifactId> 
            <version>${org.springframework.version}</version> 
        </dependency>
        <!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, 
            spring-tx) Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*) --> 
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-jdbc</artifactId> 
            <version>${org.springframework.version}</version> 
        </dependency>
        <!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, 
            and iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx) 
            Define this if you need ORM (org.springframework.orm.*) --> 
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-orm</artifactId> 
            <version>${org.springframework.version}</version> 
        </dependency>
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-asm</artifactId> 
            <version>${org.springframework.version}</version> 
        </dependency>
        <!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, 
            JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans, 
            spring-context) Define this if you need OXM (org.springframework.oxm.*) --> 
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-oxm</artifactId> 
            <version>${org.springframework.version}</version> 
        </dependency>
        <!-- Web application development utilities applicable to both Servlet and 
            Portlet Environments (depends on spring-core, spring-beans, spring-context) 
            Define this if you use Spring MVC, or wish to use Struts, JSF, or another 
            web framework with Spring (org.springframework.web.*) --> 
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-web</artifactId> 
            <version>${org.springframework.version}</version> 
        </dependency>
        <!-- Support for testing Spring applications with tools such as JUnit and 
            TestNG This artifact is generally always defined with a 'test' scope for 
            the integration testing framework and unit testing stubs --> 
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-test</artifactId> 
            <version>${org.springframework.version}</version> 
            <scope>test</scope> 
        </dependency> 
        <!-- Spring End -->
        
        <!-- Mybatis -->
        <dependency>
	      <groupId>org.mybatis</groupId>
	      <artifactId>mybatis</artifactId>
	      <version>3.0.6</version>
	    </dependency>
	    <dependency>
	      <groupId>org.mybatis</groupId>
	      <artifactId>mybatis-spring</artifactId>
	      <version>1.0.2</version>
	    </dependency>
        
        <!-- c3p0 -->
        <dependency>
	      	<groupId>c3p0</groupId>
	      	<artifactId>c3p0</artifactId>
	      	<version>0.9.1.2</version>
	    </dependency>
        
        <!-- Mysql Driver --> 
        <dependency> 
            <groupId>mysql</groupId> 
            <artifactId>mysql-connector-java</artifactId> 
            <version>5.1.21</version> 
        </dependency>
        
        <!-- log4j --> 
        <dependency> 
            <groupId>log4j</groupId> 
            <artifactId>log4j</artifactId> 
            <version>1.2.14</version> 
        </dependency>
        <dependency>
	      	<groupId>org.slf4j</groupId>
	      	<artifactId>slf4j-api</artifactId>
	      	<version>1.5.8</version>
	    </dependency>
	    <dependency>
	      	<groupId>org.slf4j</groupId>
	      	<artifactId>slf4j-log4j12</artifactId>
	      	<version>1.5.8</version>
	    </dependency>
    
        <!-- logging dependency lib，support log4j,json-lib--> 
        <dependency> 
            <groupId>commons-logging</groupId> 
            <artifactId>commons-logging-api</artifactId> 
            <version>1.1</version> 
        </dependency>
        <dependency> 
            <groupId>commons-fileupload</groupId> 
            <artifactId>commons-fileupload</artifactId> 
            <version>1.2.2</version> 
        </dependency>
        <!-- support fileupload --> 
        <dependency> 
            <groupId>org.apache.commons</groupId> 
            <artifactId>commons-io</artifactId> 
            <version>1.3.2</version> 
        </dependency>
        <!-- dom4j -->
        <dependency>
            <groupId>dom4j</groupId> 
            <artifactId>dom4j</artifactId> 
            <version>1.6.1</version> 
        </dependency>
        
        <!-- support spring transaction  --> 
        <dependency> 
            <groupId>org.aspectj</groupId> 
            <artifactId>aspectjweaver</artifactId> 
            <version>1.7.0</version> 
        </dependency> 
        <dependency> 
            <groupId>aopalliance</groupId> 
            <artifactId>aopalliance</artifactId> 
            <version>1.0</version> 
        </dependency> 
        <dependency> 
            <groupId>cglib</groupId>
            <artifactId>cglib-nodep</artifactId> 
            <version>2.2.2</version> 
        </dependency>
        
        <!-- JSON lib and its dependencies --> 
        <dependency> 
            <groupId>net.sf.json-lib</groupId> 
            <artifactId>json-lib</artifactId> 
            <classifier>jdk15</classifier> 
            <version>2.4</version> 
        </dependency>
        <dependency> 
            <groupId>net.sf.ezmorph</groupId> 
            <artifactId>ezmorph</artifactId> 
            <version>1.0.5</version> 
        </dependency>
        <dependency> 
            <groupId>commons-beanutils</groupId> 
            <artifactId>commons-beanutils</artifactId> 
            <version>1.8.3</version> 
        </dependency> 
       	
       	<!-- Utils -->
       	<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version> 
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>r09</version>
		</dependency>
		<dependency>
	      	<groupId>org.apache.poi</groupId>
	      	<artifactId>poi</artifactId>
	      	<version>3.7</version>
	    </dependency>
	    <dependency>
			<groupId>org.springside</groupId>
			<artifactId>springside-core</artifactId>
			<version>4.0.1.GA-SNAPSHOT</version>
		</dependency>
		<dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.6</version>
        </dependency>
        <dependency>
			<groupId>net.sf.dozer</groupId>
			<artifactId>dozer</artifactId>
			<version>5.2.1</version>
		</dependency>
        
        <!-- Test --> 
        <dependency> 
            <groupId>junit</groupId> 
            <artifactId>junit</artifactId> 
            <version>3.8.1</version> 
            <scope>test</scope> 
        </dependency>
        <dependency>
            <groupId>org.apache.struts</groupId>
            <artifactId>struts2-junit-plugin</artifactId>
            <version>${org.struts.version}</version>
        </dependency>
        
        <!-- webservice begin -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxws</artifactId>
			<version>2.5.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http</artifactId>
			<version>2.5.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-ws-security</artifactId>
			<version>2.5.1</version>
		</dependency>
		<!-- webservice end -->
		
        <dependency>
		   <groupId>com.sun</groupId>
		   <artifactId>tools</artifactId>
		   <version>1.6</version>
		   <scope>system</scope>
		   <systemPath>${JAVA_HOME}\lib\tools.jar</systemPath>
		</dependency>

    </dependencies>
    
    <!-- 插件配置 -->
	<build>
		<pluginManagement>
			<plugins>
				<!-- compiler插件, 设定JDK版本 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.5.1</version>
					<configuration>
						<source>${jdk.version}</source>
						<target>${jdk.version}</target>
						<encoding>utf-8</encoding> 
						<showWarnings>true</showWarnings>
					</configuration>
				</plugin>
				
				<!-- resource插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.6</version>
					<configuration>  
		                <encoding>UTF-8</encoding>  
		            </configuration>
				</plugin>
    			<!-- war打包插件, 设定war包名称不带版本号 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.3</version>
					<configuration>
						<warName>${project.artifactId}</warName>
					</configuration>
				</plugin>
			
				<!-- eclipse插件, 设定wtp版本并添加springIDE nature -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<configuration>
						<wtpversion>2.5</wtpversion>
						<additionalProjectnatures>
							<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
						</additionalProjectnatures>
					</configuration>
				</plugin>
				
				<!-- clean插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.5</version>
				</plugin>
	
				<!-- install插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				
				<!-- assembly插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.3</version>
				</plugin>
				
				<!-- ant插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.7</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
  
</project>